def buildAsLibrary = project.hasProperty('BUILD_AS_LIBRARY');
def buildAsApplication = !buildAsLibrary
if (buildAsApplication) {
    apply plugin: 'com.android.application'
}
else {
    apply plugin: 'com.android.library'
}

android {
    compileSdkVersion 26
    defaultConfig {
        if (buildAsApplication) {
            applicationId "com.my.exampleapp"
        }
        minSdkVersion 16
        targetSdkVersion 26
        versionCode 1
        versionName "1.0"
        externalNativeBuild {
            cmake {
                abiFilters "arm64-v8a"
             }
        }
        ndk {
                    //abiFilters "armeabi", "armeabi-v7a", "arm64-v8a", "x86", "x86_64"

                    // Limiting to a smaller set of  ABIs to save time while testing:
                    abiFilters "arm64-v8a"
                }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

        externalNativeBuild {
            cmake {
                path "../../../CMakeLists.txt"

                 // Using one top level build dir for all build related files to reduce clutter.
                 buildStagingDirectory file("${buildDir}/../.externalNativeBuild/${project.name}")
            }
        }
       

    lintOptions {
        abortOnError false
    }

}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
}
